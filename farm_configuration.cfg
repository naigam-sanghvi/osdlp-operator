// Declare which instance to run. For ground station use "fop".
// For receiving side (e.g. spacecraft) use "farm"
instance = "farm"

// Mission Parameters
mission:{
  tc_sent_queue_max_cap = 200  // Maximum capacity of TC sent queue
  tc_tx_queue_max_cap = 200    // Maximum capacity of TC TX queue
  tc_rx_queue_max_cap = 200    // Maximum capacity of TX RX queue
  scid = 20                    // The spacecraft ID
}

// Define the TC parameters
tc:{
// Define one such struct per virtual channel
  vc1:{
  // The following parameters apply to the whole VC
     vcid = 1                   // The VC ID
     crc = 1                    // CRC flag. 1 for on, 0 for off
     segmentation = 0           // Defines whether to use segmentation
     
     // Defines the available MAPs. Each MAP is a channel contained into
     // the virtual channel. The following params apply to each MAP
     map:{
       map1:{
         mapid = 1             // The MAP ID
         bypass = 1            // Bypass flag. 0 for TYPE_A ->use the sequence checking mechanism. 1 for TYPE_B -> bypass sequence checking mechanism
         ctrl_cmd = 1          // Control command flag. 0 for Data, 1 for Command
         data = ""             // For future use 
       }
     }
     // In case of farm instance, define this element
     farm:{
       win_width = 5           //Sliding window width
     }
  }
  
  vc2:{
     vcid = 2
     crc = 1
     segmentation = 0
     map:{
       map1:{
         mapid = 1
         bypass = 1 
         ctrl_cmd = 1
         data = ""
       }
     }
     fop:{
       win_width = 5
     }
  }  
}

// Define the TM parameters
tm:{
// One such element per virtual channel
  vc1:{
     vcid = 2             // The virtual channel ID
     crc = 1              // CRC flag. 1 for on, 0 for off
     ocf_flag = 0         // OCF flag. 1 for on, 0 for off
     sec_hdr_on = 0       // Secondary header flag. 1 for on, 0 for off
     sync_flag = 0        // Sync flag
     stuff_state = 1      // Stuff packets state. 0 for ON 1 for OFF
  }
}